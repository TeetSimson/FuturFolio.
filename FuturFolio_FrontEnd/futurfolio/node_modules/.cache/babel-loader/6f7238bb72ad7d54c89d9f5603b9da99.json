{"ast":null,"code":"var _jsxFileName = \"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/App.js\";\nimport './App.css';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Dashboards from './Components/Dashboards/Dashboards';\nimport Topbar from './Components/Topbar/Topbar';\nimport ProfileScreen from './Components/Topbar/ProfileScreen';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    dashboard: 'Dashboard'\n  }\n};\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.DashChangeDash = () => {\n      this.setState(Object.assign(this.state.user, {\n        dashboard: 'Dashboard'\n      }));\n    };\n\n    this.DashChangeStock = () => {\n      this.setState(Object.assign(this.state.user, {\n        dashboard: 'StockDash'\n      }));\n    };\n\n    this.DashChangeLoans = () => {\n      this.setState(Object.assign(this.state.user, {\n        dashboard: 'LoansDash'\n      }));\n    };\n\n    this.DashChangeRealEstate = () => {\n      this.setState(Object.assign(this.state.user, {\n        dashboard: 'RealEstateDash'\n      }));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState); // If user is not signed in clear state\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  } // Functions to change Dashboards\n\n\n  // RENDERING STARTS\n  render() {\n    const {\n      isSignedIn,\n      route\n    } = this.state; // so we don´t have to do this.state.isSignedIN\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: route === 'home' // If we are on \"home\" page\n      ?\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          DashChangeDash: this.DashChangeDash // Sending functions to sidebar buttons\n          ,\n          DashChangeStock: this.DashChangeStock,\n          DashChangeLoans: this.DashChangeLoans,\n          DashChangeRealEstate: this.DashChangeRealEstate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dashboards, {\n          dashboard: this.state.user.dashboard // Sending which dashboard to display\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this) : // Else if we are on \"signin\" page\n      route === 'profile' ? /*#__PURE__*/_jsxDEV(ProfileScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : // Else if we are on \"signin\" page\n      route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this) // If on \"signin\" page\n      :\n      /*#__PURE__*/\n      _jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) // If on \"register\" page\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/App.js"],"names":["Sidebar","Signin","Register","Dashboards","Topbar","ProfileScreen","React","Component","initialState","route","isSignedIn","user","id","name","email","entries","joined","dashboard","App","constructor","DashChangeDash","setState","Object","assign","state","DashChangeStock","DashChangeLoans","DashChangeRealEstate","onRouteChange","render","loadUser"],"mappings":"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","sourcesContent":["import './App.css';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Dashboards from './Components/Dashboards/Dashboards';\nimport Topbar from './Components/Topbar/Topbar';\nimport ProfileScreen from './Components/Topbar/ProfileScreen';\nimport React, { Component } from 'react';\n\n\nconst initialState = {\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    dashboard: 'Dashboard'\n  }\n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  // Functions to change Dashboards\n  DashChangeDash = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'Dashboard'}))\n  }\n\n  DashChangeStock = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'StockDash'}))\n  }\n\n  DashChangeLoans = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'LoansDash'}))\n  }\n\n  DashChangeRealEstate = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'RealEstateDash'}))\n  }\n\n\n  // Route changes\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState) // If user is not signed in clear state\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n\n  // RENDERING STARTS\n  render() {\n    const { isSignedIn, route } = this.state; // so we don´t have to do this.state.isSignedIN\n\n    return (\n      <div>\n      { route === 'home' // If we are on \"home\" page\n      ?  <div className=\"App\">\n          <Sidebar \n            DashChangeDash={this.DashChangeDash} // Sending functions to sidebar buttons\n            DashChangeStock={this.DashChangeStock}\n            DashChangeLoans={this.DashChangeLoans}\n            DashChangeRealEstate={this.DashChangeRealEstate}\n            />\n          <Dashboards \n            dashboard={this.state.user.dashboard} // Sending which dashboard to display\n          />\n          <Topbar/>\n        </div>\n      :  // Else if we are on \"signin\" page\n        route === 'profile' \n          ? <ProfileScreen/>\n\n      : ( // Else if we are on \"signin\" page\n        route === 'signin' \n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> // If on \"signin\" page\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> // If on \"register\" page\n        )\n      \n      }\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}