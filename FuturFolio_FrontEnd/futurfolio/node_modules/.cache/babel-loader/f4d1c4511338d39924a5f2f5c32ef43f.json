{"ast":null,"code":"var _jsxFileName = \"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StocksTable/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useRowStyles = makeStyles({\n  root: {\n    padding: 0\n  },\n  rows: {\n    background: \"rgba(255, 255, 255, 0.185)\"\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [{\n      date: '2020-01-05',\n      customerId: '11091700',\n      amount: 3\n    }, {\n      date: '2020-01-02',\n      customerId: 'Anonymous',\n      amount: 1\n    }]\n  };\n}\n\nfunction Row(props) {\n  _s();\n\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: \"Row\",\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        classes: {\n          root: classes.root // class name, e.g. `classes-nesting-root-x`\n\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u1401\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.calories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.fat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.carbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.protein\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      cassName: \"Row\",\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            margin: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"purchases\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Customer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Total price ($)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: row.history.map(historyRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: historyRow.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.customerId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: historyRow.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: Math.round(historyRow.amount * row.price * 100) / 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this)]\n                }, historyRow.date, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"RF9p2CoDwMBXAZRTkFYWAJRAu48=\", false, function () {\n  return [useRowStyles];\n});\n\n_c = Row;\nRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      customerId: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    })).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired\n  }).isRequired\n};\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99), createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99), createData('Eclair', 262, 16.0, 24, 6.0, 3.79), createData('Cupcake', 305, 3.7, 67, 4.3, 2.5), createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5)];\nexport default function CollapsibleTable() {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    className: \"Table\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              backgroundColor: \"transparent\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              backgroundColor: \"transparent\"\n            },\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              backgroundColor: \"transparent\"\n            },\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              backgroundColor: \"transparent\"\n            },\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              backgroundColor: \"transparent\"\n            },\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              backgroundColor: \"transparent\"\n            },\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(Row, {\n          row: row\n        }, row.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CollapsibleTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"CollapsibleTable\");","map":{"version":3,"sources":["/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StocksTable/Table.js"],"names":["React","PropTypes","makeStyles","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","useRowStyles","root","padding","rows","background","createData","name","calories","fat","carbs","protein","price","history","date","customerId","amount","Row","props","row","open","setOpen","useState","classes","paddingBottom","paddingTop","map","historyRow","Math","round","propTypes","shape","number","isRequired","arrayOf","string","CollapsibleTable","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport './Table.css';\n\nconst useRowStyles = makeStyles({\n  root: {\n    padding: 0,\n  },\n  rows: {\n    background: \"rgba(255, 255, 255, 0.185)\"\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\n    ],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className=\"Row\">\n        <TableCell classes={{\n        root: classes.root, // class name, e.g. `classes-nesting-root-x`\n        }}>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <p>▲</p> : <p>ᐁ</p>}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow cassName=\"Row\">\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n];\n\nexport default function CollapsibleTable() {\n  return (\n    <TableContainer className=\"Table\">\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ backgroundColor: \"transparent\"}}/>\n            <TableCell style={{ backgroundColor: \"transparent\"}}>Dessert (100g serving)</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Calories</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}