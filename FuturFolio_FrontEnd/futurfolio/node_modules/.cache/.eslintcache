[{"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/index.js":"1","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/App.js":"2","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/reportWebVitals.js":"3","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Sidebar/Sidebar.js":"4","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Register/Register.js":"5","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Signin/Signin.js":"6","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Topbar/Topbar.js":"7","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/Dashboards.js":"8","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Sidebar/PlusButton.js":"9","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Sidebar/SidebarItems.js":"10","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StockDash.js":"11","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/ProfileDash/ProfileScreen.js":"12","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Topbar/DropdownMenu.js":"13","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Topbar/NotificationMenu.js":"14","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/NetWorth/NetWorth.js":"15","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/NetWorth/NetWorthTab.js":"16","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StocksTable/StocksTable.js":"17","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StocksTable/Table.js":"18"},{"size":536,"mtime":1613389734754,"results":"19","hashOfConfig":"20"},{"size":3200,"mtime":1614710141253,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1612978044852,"results":"22","hashOfConfig":"20"},{"size":2281,"mtime":1614700653956,"results":"23","hashOfConfig":"20"},{"size":4442,"mtime":1613398872678,"results":"24","hashOfConfig":"20"},{"size":3663,"mtime":1614856749240,"results":"25","hashOfConfig":"20"},{"size":1818,"mtime":1614717041805,"results":"26","hashOfConfig":"20"},{"size":1403,"mtime":1614700653952,"results":"27","hashOfConfig":"20"},{"size":2459,"mtime":1613748212833,"results":"28","hashOfConfig":"20"},{"size":2186,"mtime":1613748212833,"results":"29","hashOfConfig":"20"},{"size":849,"mtime":1614856749240,"results":"30","hashOfConfig":"20"},{"size":962,"mtime":1614723754124,"results":"31","hashOfConfig":"20"},{"size":9150,"mtime":1614716851601,"results":"32","hashOfConfig":"20"},{"size":2169,"mtime":1614700816836,"results":"33","hashOfConfig":"20"},{"size":485,"mtime":1614262052579,"results":"34","hashOfConfig":"20"},{"size":255,"mtime":1614262052579,"results":"35","hashOfConfig":"20"},{"size":962,"mtime":1614856749240,"results":"36","hashOfConfig":"20"},{"size":5307,"mtime":1614856749240,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zc2nmj",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/index.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/App.js",["80"],"import './App.css';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Dashboards from './Components/Dashboards/Dashboards';\nimport Topbar from './Components/Topbar/Topbar';\nimport ProfileScreen from './Components/Dashboards/ProfileDash/ProfileScreen';\nimport React, { Component } from 'react';\n\n\nconst initialState = {\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    dashboard: 'Dashboard',\n    title: 'Dashboard'\n  }\n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  // Functions to change Dashboards\n  DashChangeDash = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'Dashboard'}))\n    this.setState(Object.assign(this.state.user, { title: 'Dashboard'}))\n  }\n\n  DashChangeStock = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'StockDash'}))\n    this.setState(Object.assign(this.state.user, { title: 'Stocks'}))\n  }\n\n  DashChangeLoans = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'LoansDash'}))\n    this.setState(Object.assign(this.state.user, { title: 'Loans'}))\n  }\n\n  DashChangeRealEstate = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'RealEstateDash'}))\n    this.setState(Object.assign(this.state.user, { title: 'Real Estate'}))\n  }\n\n  DashChangeProfile = () => {\n    this.setState(Object.assign(this.state.user, { dashboard: 'ProfileDash'}))\n    this.setState(Object.assign(this.state.user, { title: 'Profile'}))\n  }\n\n  // Route changes\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState) // If user is not signed in clear state\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n\n  // RENDERING STARTS\n  render() {\n    const { isSignedIn, route } = this.state; // so we donÂ´t have to do this.state.isSignedIN\n\n    return (\n      <div>\n      { route === 'home' // If we are on \"home\" page\n      ?  <div className=\"App\">\n          <Sidebar \n            DashChangeDash={this.DashChangeDash} // Sending functions to sidebar buttons\n            DashChangeStock={this.DashChangeStock}\n            DashChangeLoans={this.DashChangeLoans}\n            DashChangeRealEstate={this.DashChangeRealEstate}\n            />\n          <Dashboards \n            dashboard={this.state.user.dashboard} // Sending which dashboard to display\n          />\n          <Topbar \n            DashChangeProfile={this.DashChangeProfile}\n            title={this.state.user.title}\n            /> \n        </div>\n      :  // Else if we are on \"profile\" page\n        route === 'profile' \n          ? <ProfileScreen />\n\n      : ( // Else if we are on \"signin\" page\n        route === 'signin' \n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> // If on \"signin\" page\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> // If on \"register\" page\n        )\n      \n      }\n      </div>\n    )\n  }\n}\n\n","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/reportWebVitals.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Sidebar/Sidebar.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Register/Register.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Signin/Signin.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Topbar/Topbar.js",["81","82"],"import React, { Component, useEffect, useState} from 'react';\nimport '../../App.css';\nimport \"./Topbar.css\";\nimport { ReactComponent as ProfileIcon } from './Icons/profileIcon.svg';\nimport { ReactComponent as BellIcon } from './Icons/bellIcon.svg';\nimport DropdownMenu from './DropdownMenu'\nimport NotificationMenu from './NotificationMenu';\n\nfunction Navbar(props){ //function of the navbar which is the topbar\n\n    return(\n        <nav className=\"topbar\">\n            <ul className=\"topbar-nav\">{props.children}</ul>\n                \n        </nav>\n    );\n}\n\nfunction NavItem(props){//function for the items within the navbar\n\n    //returns two values in an array\n    //first value is state called open, boolean which tells us if menu is open\n    //second value is function that changes state\n    const [open, setOpen] = useState(false); //closed by default, so parameter set to false\n\n\n    return(\n        <li className=\"nav-item\">\n            <a href=\"#\" className = \"nav-icon-button\" onClick={() => setOpen(!open)}>{/*changes state on a click, toggles the boolean*/}\n                {props.icon}\n            </a>\n\n            {open && props.children} {/* if open is true then it will show the children*/ }\n        </li>\n    );\n}\n\n\nexport default class Topbar extends Component {\n\n    render() {\n        return (\n            <Navbar>\n                <h1 className=\"DashboardTitle\">{this.props.title}</h1>\n                <span className=\"Stick\"></span>\n                <NavItem icon={<BellIcon />}>\n                    <NotificationMenu/>\n                </NavItem>\n                <NavItem icon={<ProfileIcon />}>\n                    {/*Dropdown goes here*/}\n                    <DropdownMenu DashChangeProfile={this.props.DashChangeProfile}/>\n                </NavItem>\n\n            </Navbar>\n        );\n    }\n}\n","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/Dashboards.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Sidebar/PlusButton.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Sidebar/SidebarItems.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StockDash.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/ProfileDash/ProfileScreen.js",["83"],"import React, { Component } from 'react';\nimport profilepic from './profilepic.jpg';\nimport \"./ProfileScreen.css\"\nimport { ReactComponent as ProfileIcon } from './Icons/profileIcon.svg';\n\nexport default class ProfileScreen extends Component{\n    render(){\n        return(\n            <div>\n                <div>\n                    <div className=\"ProfilePos\">\n                        <div className=\"ProfileIcon\">\n                            <ProfileIcon/>\n                        </div>\n                        \n                    </div>\n                    <div>\n                        <h4>Name holder</h4>\n                        <div style={{diplay:\"flex\", justifyContent:\"space-between\", width:\"108%\"}}>\n                            <h6>Location</h6>\n                            <h6>Age</h6>\n                            <h6>Friends</h6>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Topbar/DropdownMenu.js",["84","85","86","87","88"],"import React, { Component, useEffect, useState} from 'react'\n//for the transition animation\nimport {CSSTransition} from 'react-transition-group';\n//svg files for the icons used\nimport { ReactComponent as CogIcon } from './Icons/cogIcon.svg';\nimport { ReactComponent as RightChevron } from './Icons/chevronRight.svg';\nimport { ReactComponent as LeftChevron } from './Icons/chevronLeft.svg';\nimport { ReactComponent as PowerIcon } from './Icons/powerIcon.svg';\nimport { ReactComponent as ProfileIcon } from './Icons/profileIcon.svg';\nimport { ReactComponent as AppearanceIcon } from './Icons/appearanceIcon.svg';\nimport { ReactComponent as LanguageIcon } from './Icons/languageIcon.svg';\nimport { ReactComponent as LocationIcon } from './Icons/locationIcon.svg';\nimport { ReactComponent as AdvancedIcon } from './Icons/advancedIcon.svg';\n\nvar name = \"Elon Musk\"; // A variable for profile name\n\nexport default function DropdownMenu(props){ //dropdownmenu function\n\n    const [activeMenu, setActiveMenu] = useState('main'); //state of the menu\n    const [menuHeight, setMenuHeight] = useState(null);\n\n\n\n\n    function calcHeight(el){\n        const height = el.offsetHeight;\n        setMenuHeight(height);\n    }\n\n\n    function DropdownItem(props){ //Items nested in the function\n        return(\n            <a href=\"#\" className=\"menu-item\" onClick={() => props.gotoMenu && setActiveMenu(props.gotoMenu)}>\n                <span className=\"icon-button\">{props.leftIcon}</span>{/*Icon on the left*/}\n                {props.children}\n\n                <span className=\"icon-right\">{props.rightIcon}</span>{/*Icon on the right*/}\n                \n            </a>\n        );\n    }\n\n    function ProfileDropItem(props){ //Items nested in the function\n        return(\n            <a href=\"#\" className=\"profdrop-item\" onClick={() => props.gotoMenu && setActiveMenu(props.gotoMenu)}>\n                <span className=\"profdrop-icon\">{props.Icon}</span>{/*Profile Image*/}\n                <span className=\"prof-name\">{props.children} </span>              \n            </a>\n        );\n    }\n\n\n    function DropdownItemBack(props){//Items nested in the function\n        return(\n            <a href=\"#\" className=\"menu-item\" onClick={() => props.gotoMenu && setActiveMenu(props.gotoMenu)}>\n                <span className=\"leftChevron\">{props.leftIcon}</span>{/*Icon on the left*/}\n                {props.children}\n\n                <span className=\"icon-right\">{props.rightIcon}</span>{/*Icon on the right*/}\n                \n            </a>\n        );\n    }\n\n    return(\n        <div className=\"dropdown\" style={{height: menuHeight}}>\n            {/*if activeMenu is main then show children*/}\n            <CSSTransition \n              in={activeMenu === 'main'}\n              unmountOnExit // unmountOnExit removes the children when main is not active\n              timeout={500} //duration of animation\n              classNames=\"menu-primary\"\n              onEnter={calcHeight}\n              >\n                <div className=\"menu\">\n                    <ProfileDropItem //The top bit of the menu\n                    Icon = {<ProfileIcon/>}\n                    >\n                        {name} {/* The profile's name */}\n                    </ProfileDropItem>\n\n\n                    {/*adds an item called My Profile*/}\n                    <div onClick={props.DashChangeProfile}>\n                        <DropdownItem \n                        leftIcon = {<ProfileIcon/>}\n                        \n                        >\n                            My Profile\n                        </DropdownItem>\n                    </div>\n                    {/*adds an item called Settings*/}\n                    <DropdownItem\n                    leftIcon={<CogIcon />}\n                    rightIcon={<RightChevron/>}\n                    gotoMenu=\"settings\"\n                    >\n                        <p>{/*A lot of spaces for styling*/}\n                            Settings &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        </p>\n                    </DropdownItem>\n\n                    {/*adds an item called Log Out*/}\n                    <DropdownItem\n                    leftIcon={<PowerIcon />}\n                    >\n                        Log Out\n                    </DropdownItem>\n                </div>\n            </CSSTransition>\n\n            <CSSTransition \n              in={activeMenu === 'settings'}\n              unmountOnExit // unmountOnExit removes the children when main is not active\n              timeout={500} //duration of animation\n              classNames=\"menu-secondary\"\n              onEnter={calcHeight}\n              >\n                <div className=\"menu\">\n                    {/*adds an item called Settings*/}\n                    <DropdownItemBack //I used a difference function for the Leftchevron styling\n                    leftIcon={<LeftChevron className=\"leftChevron\"/>}\n                    gotoMenu=\"main\"  //takes back to main menu\n                    >\n                        Settings\n                    </DropdownItemBack>\n                    {/*adds an item called Appearance for personalisation*/}\n                    <DropdownItem\n                    leftIcon={<AppearanceIcon />}\n                    rightIcon={<RightChevron/>}\n                    gotoMenu=\"appearance\" //goes to Appearance Menu\n                    >\n                        <p>Appearance&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    </DropdownItem>\n\n                    <DropdownItem\n                    leftIcon={<LanguageIcon />}\n                    rightIcon={<RightChevron/>}\n                    gotoMenu=\"language\" //goes to Appearance Menu\n                    >\n                        <p>Language&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    </DropdownItem>\n\n                    <DropdownItem\n                    leftIcon={<LocationIcon />}\n                    rightIcon={<RightChevron/>}\n                    gotoMenu=\"location\" //goes to Appearance Menu\n                    >\n                        <p>Location&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n                    </DropdownItem>\n                    \n                    <DropdownItem\n                    leftIcon={<AdvancedIcon />}\n                    >\n                        Advanced Settings\n                    </DropdownItem>\n                </div>\n            </CSSTransition>\n\n            <CSSTransition \n              in={activeMenu === 'appearance'}\n              unmountOnExit // unmountOnExit removes the children when main is not active\n              timeout={500} //duration of animation\n              classNames=\"menu-tertiary\"\n              onEnter={calcHeight}\n              >\n                <div className=\"menu\">\n                    {/*adds an item called Settings*/}\n                    <DropdownItemBack //I used a difference function for the Leftchevron styling\n                    leftIcon={<LeftChevron className=\"leftChevron\"/>}\n                    gotoMenu=\"settings\"  //takes back to main menu\n                    >\n                        Appearance\n                    </DropdownItemBack>\n                    \n                </div>\n            </CSSTransition>\n\n            <CSSTransition \n              in={activeMenu === 'language'}\n              unmountOnExit // unmountOnExit removes the children when main is not active\n              timeout={500} //duration of animation\n              classNames=\"menu-tertiary\"\n              onEnter={calcHeight}\n              >\n                <div className=\"menu\">\n                    {/*adds an item called Settings*/}\n                    <DropdownItemBack //I used a difference function for the Leftchevron styling\n                    leftIcon={<LeftChevron className=\"leftChevron\"/>}\n                    gotoMenu=\"settings\"  //takes back to main menu\n                    >\n                        Choose your language\n                    </DropdownItemBack>\n                    \n                </div>\n            </CSSTransition>\n\n            <CSSTransition \n              in={activeMenu === 'location'}\n              unmountOnExit // unmountOnExit removes the children when main is not active\n              timeout={500} //duration of animation\n              classNames=\"menu-tertiary\"\n              onEnter={calcHeight}\n              >\n                <div className=\"menu\">\n                    {/*adds an item called Settings*/}\n                    <DropdownItemBack //I used a difference function for the Leftchevron styling\n                    leftIcon={<LeftChevron className=\"leftChevron\"/>}\n                    gotoMenu=\"settings\"  //takes back to main menu\n                    >\n                        Choose your location\n                    </DropdownItemBack>\n                    \n                </div>\n            </CSSTransition>\n        </div>\n    );\n}\n","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Topbar/NotificationMenu.js",["89","90","91","92","93","94","95"],"import React, { Component, useEffect, useState} from 'react'\nimport {CSSTransition} from 'react-transition-group';\nimport { ReactComponent as CogIcon } from './Icons/cogIcon.svg';\nimport { ReactComponent as RightChevron } from './Icons/chevronRight.svg';\nimport { ReactComponent as LeftChevron } from './Icons/chevronLeft.svg';\nimport { ReactComponent as PowerIcon } from './Icons/powerIcon.svg';\nimport { ReactComponent as ProfileIcon } from './Icons/profileIcon.svg';\n\nexport default function NotificationMenu(){//dropdownmenu function\n\n    const [activeMenu, setActiveMenu] = useState('main');//state of the menu\n    const [menuHeight, setMenuHeight] = useState(null);\n\n\n\n\n    function calcHeight(el){\n        const height = el.offsetHeight;\n        setMenuHeight(height);\n    }\n\n\n    function NotificationItem(props){//Items nested in the function\n        return(\n            <a href=\"#\" className=\"notif-item\" onClick={() => props.gotoMenu && setActiveMenu(props.gotoMenu)}>\n                <span className=\"icon-button\">{props.leftIcon}</span>{/*Icon on the left*/}\n                {props.children}\n\n                <span className=\"icon-right\">{props.rightIcon}</span>{/*Icon on the right*/}\n                \n            </a>\n        );\n    }\n\n\n    return(\n        <div className=\"dropdown\" style={{height: menuHeight}}>\n            {/*if activeMenu is main then show children*/}\n            <CSSTransition \n              in={activeMenu === 'main'}\n              unmountOnExit // unmountOnExit removes the children when main is not active\n              timeout={500} //duration of animation\n              classNames=\"menu-primary\"\n              onEnter={calcHeight}\n              >\n                <div className=\"menu\">\n                    {/*adds an item called My Profile*/}\n                    \n                        <NotificationItem \n                        leftIcon = {<ProfileIcon/>}\n                        \n                        >\n                            Notification 1\n                        </NotificationItem>\n                    \n                   \n                </div>\n            </CSSTransition>\n\n           \n        </div>\n    );\n}\n","/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/NetWorth/NetWorth.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/NetWorth/NetWorthTab.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StocksTable/StocksTable.js",[],"/home/csimage/GitRepos/FuturFolio./FuturFolio_FrontEnd/futurfolio/src/Components/Dashboards/StockDash/StocksTable/Table.js",["96"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport './Table.css';\n\nconst useRowStyles = makeStyles({\n  root: {\n    padding: 0,\n  },\n  rows: {\n    background: \"rgba(255, 255, 255, 0.185)\"\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\n    ],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className=\"Row\">\n        <TableCell classes={{\n        root: classes.root, // class name, e.g. `classes-nesting-root-x`\n        }}>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <p>â²</p> : <p>á</p>}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow cassName=\"Row\">\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n];\n\nexport default function CollapsibleTable() {\n  return (\n    <TableContainer className=\"Table\">\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ backgroundColor: \"transparent\"}}/>\n            <TableCell style={{ backgroundColor: \"transparent\"}}>Dessert (100g serving)</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Calories</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell style={{ backgroundColor: \"transparent\"}} align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}",{"ruleId":"97","severity":1,"message":"98","line":70,"column":13,"nodeType":"99","messageId":"100","endLine":70,"endColumn":23},{"ruleId":"97","severity":1,"message":"101","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":37},{"ruleId":"102","severity":1,"message":"103","line":29,"column":13,"nodeType":"104","endLine":29,"endColumn":86},{"ruleId":"97","severity":1,"message":"105","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"106","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":37},{"ruleId":"102","severity":1,"message":"103","line":33,"column":13,"nodeType":"104","endLine":33,"endColumn":111},{"ruleId":"102","severity":1,"message":"103","line":45,"column":13,"nodeType":"104","endLine":45,"endColumn":115},{"ruleId":"102","severity":1,"message":"103","line":55,"column":13,"nodeType":"104","endLine":55,"endColumn":111},{"ruleId":"97","severity":1,"message":"106","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":37},{"ruleId":"97","severity":1,"message":"107","line":3,"column":28,"nodeType":"99","messageId":"100","endLine":3,"endColumn":35},{"ruleId":"97","severity":1,"message":"108","line":4,"column":28,"nodeType":"99","messageId":"100","endLine":4,"endColumn":40},{"ruleId":"97","severity":1,"message":"109","line":5,"column":28,"nodeType":"99","messageId":"100","endLine":5,"endColumn":39},{"ruleId":"97","severity":1,"message":"110","line":6,"column":28,"nodeType":"99","messageId":"100","endLine":6,"endColumn":37},{"ruleId":"102","severity":1,"message":"103","line":25,"column":13,"nodeType":"104","endLine":25,"endColumn":112},{"ruleId":"97","severity":1,"message":"111","line":14,"column":8,"nodeType":"99","messageId":"100","endLine":14,"endColumn":13},"no-unused-vars","'isSignedIn' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'profilepic' is defined but never used.","'Component' is defined but never used.","'CogIcon' is defined but never used.","'RightChevron' is defined but never used.","'LeftChevron' is defined but never used.","'PowerIcon' is defined but never used.","'Paper' is defined but never used."]